(function(n){typeof exports=="object"&&typeof module=="object"?n(require("../../lib/codemirror")):typeof define=="function"&&define.amd?define(["../../lib/codemirror"],n):n(CodeMirror)})(function(n){"use strict";function t(n){var t=[];return n.split(" ").forEach(function(n){t.push({name:n})}),t}var i=t("INVERT AND OR XOR 2* 2/ LSHIFT RSHIFT 0= = 0< < > U< MIN MAX 2DROP 2DUP 2OVER 2SWAP ?DUP DEPTH DROP DUP OVER ROT SWAP >R R> R@ + - 1+ 1- ABS NEGATE S>D * M* UM* FM/MOD SM/REM UM/MOD */ */MOD / /MOD MOD HERE , @ ! CELL+ CELLS C, C@ C! CHARS 2@ 2! ALIGN ALIGNED +! ALLOT CHAR [CHAR] [ ] BL FIND EXECUTE IMMEDIATE COUNT LITERAL STATE ; DOES> >BODY EVALUATE SOURCE >IN <# # #S #> HOLD SIGN BASE >NUMBER HEX DECIMAL FILL MOVE . CR EMIT SPACE SPACES TYPE U. .R U.R ACCEPT TRUE FALSE <> U> 0<> 0> NIP TUCK ROLL PICK 2>R 2R@ 2R> WITHIN UNUSED MARKER I J TO COMPILE, [COMPILE] SAVE-INPUT RESTORE-INPUT PAD ERASE 2LITERAL DNEGATE D- D+ D0< D0= D2* D2/ D< D= DMAX DMIN D>S DABS M+ M*/ D. D.R 2ROT DU< CATCH THROW FREE RESIZE ALLOCATE CS-PICK CS-ROLL GET-CURRENT SET-CURRENT FORTH-WORDLIST GET-ORDER SET-ORDER PREVIOUS SEARCH-WORDLIST WORDLIST FIND ALSO ONLY FORTH DEFINITIONS ORDER -TRAILING /STRING SEARCH COMPARE CMOVE CMOVE> BLANK SLITERAL"),r=t("IF ELSE THEN BEGIN WHILE REPEAT UNTIL RECURSE [IF] [ELSE] [THEN] ?DO DO LOOP +LOOP UNLOOP LEAVE EXIT AGAIN CASE OF ENDOF ENDCASE");n.defineMode("forth",function(){function n(n,t){for(var i=n.length-1;i>=0;i--)if(n[i].name===t.toUpperCase())return n[i];return undefined}return{startState:function(){return{state:"",base:10,coreWordList:i,immediateWordList:r,wordList:[]}},token:function(t,i){var r;if(t.eatSpace())return null;if(i.state===""){if(t.match(/^(\]|:NONAME)(\s|$)/i))return i.state=" compilation","builtin compilation";if(r=t.match(/^(\:)\s+(\S+)(\s|$)+/),r)return i.wordList.push({name:r[2].toUpperCase()}),i.state=" compilation","def"+i.state;if(r=t.match(/^(VARIABLE|2VARIABLE|CONSTANT|2CONSTANT|CREATE|POSTPONE|VALUE|WORD)\s+(\S+)(\s|$)+/i),r)return i.wordList.push({name:r[2].toUpperCase()}),"def"+i.state;if(r=t.match(/^(\'|\[\'\])\s+(\S+)(\s|$)+/),r)return"builtin"+i.state}else{if(t.match(/^(\;|\[)(\s)/))return i.state="",t.backUp(1),"builtin compilation";if(t.match(/^(\;|\[)($)/))return i.state="","builtin compilation";if(t.match(/^(POSTPONE)\s+\S+(\s|$)+/))return"builtin"}return r=t.match(/^(\S+)(\s+|$)/),r?n(i.wordList,r[1])!==undefined?"variable"+i.state:r[1]==="\\"?(t.skipToEnd(),"comment"+i.state):n(i.coreWordList,r[1])!==undefined?"builtin"+i.state:n(i.immediateWordList,r[1])!==undefined?"keyword"+i.state:r[1]==="("?(t.eatWhile(function(n){return n!==")"}),t.eat(")"),"comment"+i.state):r[1]===".("?(t.eatWhile(function(n){return n!==")"}),t.eat(")"),"string"+i.state):r[1]==='S"'||r[1]==='."'||r[1]==='C"'?(t.eatWhile(function(n){return n!=='"'}),t.eat('"'),"string"+i.state):r[1]-68719476735?"number"+i.state:"atom"+i.state:void 0}}});n.defineMIME("text/x-forth","forth")});
//# sourceMappingURL=forth.min.js.map
